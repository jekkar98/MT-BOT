import asyncio
from flask import Flask, request, abort
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler

import os

TOKEN = os.getenv("BOT_TOKEN")  # –ø–µ—Ä–µ–¥–∞–≤–∞–π —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render
ADMIN_CHAT_IDS = [821932338, 384949127]  # —Ç–≤–æ–∏ –∞–π–¥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫

app = Flask(__name__)

# –°–æ–∑–¥–∞—ë–º Application - –Ω–æ–≤—ã–π –±–æ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π async
application = Application.builder().token(TOKEN).build()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")],
        [InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="review")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MT-IT!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "request":
        await query.edit_message_text("‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        context.user_data["expecting"] = "request"

    elif query.data == "review":
        await query.edit_message_text("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        context.user_data["expecting"] = "review"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞—è–≤–∫–∏ –∏ –æ—Ç–∑—ã–≤—ã)
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    expecting = context.user_data.get("expecting")

    if expecting == "request":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        for admin_id in ADMIN_CHAT_IDS:
            await application.bot.send_message(
                chat_id=admin_id,
                text=f"üì© *–ó–∞—è–≤–∫–∞* –æ—Ç [{user.first_name}](tg://user?id={user.id}):\n\n{text}",
                parse_mode=ParseMode.MARKDOWN
            )
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        context.user_data["expecting"] = None

    elif expecting == "review":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        for admin_id in ADMIN_CHAT_IDS:
            await application.bot.send_message(
                chat_id=admin_id,
                text=f"‚≠ê *–û—Ç–∑—ã–≤* –æ—Ç [{user.first_name}](tg://user?id={user.id}):\n\n{text}",
                parse_mode=ParseMode.MARKDOWN
            )
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")
        context.user_data["expecting"] = None

    else:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞ —Å –º–µ–Ω—é
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã
application.add_handler(CommandHandler("start", start))
application.add_handler(CallbackQueryHandler(button_handler))
application.add_handler(application.message_handler(message_handler))

# Flask webhook route ‚Äî —Å—é–¥–∞ –¢–µ–ª–µ–≥–∞ —à–ª—ë—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    data = request.get_json(force=True)
    update = Update.de_json(data, application.bot)
    asyncio.run(application.update_queue.put(update))
    return "OK"

# –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
@app.route("/")
def index():
    return "MT-IT Telegram Bot is running!"

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == "__main__":
    # –í Render –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è gunicorn, –∞ –ª–æ–∫–∞–ª—å–Ω–æ - –ø—Ä–æ—Å—Ç–æ python main.py
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", "5000")))
