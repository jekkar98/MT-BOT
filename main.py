import os
from flask import Flask, request
import telegram

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = telegram.Bot(token=TOKEN)

app = Flask(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {chat_id: "waiting_for_..." }
user_states = {}

ADMINS = [821932338, 384949127]  # —Å—é–¥–∞ –¥–æ–±–∞–≤—å —Å–≤–æ–∏ ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

@app.route('/')
def index():
    return "MT-IT Bot is running."

@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
    update = telegram.Update.de_json(request.get_json(force=True), bot)
    chat_id = update.message.chat.id
    message = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ –∫–∞–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ–π—á–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    state = user_states.get(chat_id)

    if message.lower() in ["/start", "—Å—Ç–∞—Ä—Ç", "–ø—Ä–∏–≤–µ—Ç"]:
        user_states.pop(chat_id, None)  # —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        keyboard = telegram.ReplyKeyboardMarkup(
            [['üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', 'üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤']], resize_keyboard=True)
        bot.send_message(chat_id=chat_id, text="üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MT-IT!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)
        return "ok"

    if state == "waiting_for_request":
        # –ü–æ–ª—É—á–∏–ª–∏ –∑–∞—è–≤–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for admin_id in ADMINS:
            bot.send_message(chat_id=admin_id,
                             text=f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{update.message.from_user.username} ({chat_id}):\n\n{message}")
        bot.send_message(chat_id=chat_id, text="‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!")
        user_states.pop(chat_id)
        return "ok"

    if state == "waiting_for_review":
        # –ü–æ–ª—É—á–∏–ª–∏ –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for admin_id in ADMINS:
            bot.send_message(chat_id=admin_id,
                             text=f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{update.message.from_user.username} ({chat_id}):\n\n{message}")
        bot.send_message(chat_id=chat_id, text="‚úÖ –û—Ç–∑—ã–≤ –ø–æ–ª—É—á–µ–Ω. –°–ø–∞—Å–∏–±–æ!")
        user_states.pop(chat_id)
        return "ok"

    if message == "üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É":
        user_states[chat_id] = "waiting_for_request"
        bot.send_message(chat_id=chat_id, text="‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É.")
        return "ok"

    if message == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
        user_states[chat_id] = "waiting_for_review"
        bot.send_message(chat_id=chat_id, text="‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤.")
        return "ok"

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ
    bot.send_message(chat_id=chat_id, text="‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏.")
    return "ok"


if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
